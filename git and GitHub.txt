git and GitHub

GIT
> .git is a version control used to track a code.
> .easy and simple to learn 

GITHUB
> .GitHub is used to store and manage code.

STEP-1: Install git-bash
STEP-2: Install VS-code or command prompt or Git-hub


------------------------------------------------------------------------------------------------------------------------------------------------------------


Installation of git:
1.	Git init
2.	Configure of git (git config –global user.name “shiva9111”)
3.	git config --global user.email rshivamanish@gmail.com for email
4.	git remote add origin https://github.com/shiva9111/training.git (to join the local storage)
5.	git pull origin main
6.	git add .
7.	git commit -m "new-file"( git commit -m “message”)
8.	To check status (git status)
9.	Creating new master to pull all branch to master branch (git push -u origin master)


STEPS:
1.	Create a git-hub account
2.	Created repo in git-hub
3.	Open vs code and open terminal in vs code
4.	Init in git in a local repo
5.	Git init command
6.	Configure user and email to local page
7.	git config --global user.name “shiva9111”
8.	git config --global user.email rshivamanish@gmail.com
9.	add remote/cloud repo to local repo
10.	git remote add origin http-path(git remote remove origin http-path)(git remote add origin)
11.	git pull origin (Branch name”Main”)
12.	covert untracked files to tracked files
13.	git add .
14.	git commit -m “message”
15.	check the status 
16.	git status
17.	push to cloud  repo
18.	git push -u origin master(branch-main)



------------------------------------------------------------------------------------------------------------------------------------------------------------


                                                                   JavaScript


1. It is object based programming language used to convert static page into dynamic page

2. Two ways to write JavaScript code:
   Internal - It is written in same file
   External  

3. Types of datatypes:
   Primitive datatypes - number, string, Boolean, undefined, null, bigint.
   Non-primitive datatypes - class, object, functions, array, map, set.

4. Static - programmer mention datatype to interpreter 
   Dynamic - no need to mention here interpreter will understand  
   So variables in JavaScript are dynamic in nature

5. Variables :
   global scope-declare variable outside can access inside function 
   local scope-declare variable outside cant access inside function 
   script scope-

6. var - global scope
   const - script scope
   let - script scope


   --header part is invisible part to user 
   --body part is visible

   what is datatypes?

   datatype is used to define what king of data used in the variable


   types of datatypes:-
   1. primitive datatypes
    - it can store single values
    -immutable(cannot be modified or change)
    -primitive dataypes are:
         1. string
         2. Boolean
         3. number
         4. undefined 
         5. null
         6. big int
         7. symbol
   2.non-primitive datatypes
    - it can store multiple values
    -mutable(it can be modified  or change)
    - non-primitve datatypes are:
         1. class
         2. objects
         3. functions
         4. arrays
         5. math, date, json

   1. String: - sequence of characters stores within double quotes/single quotes/backticks(template literals) 
    ex: var username="Mahesh Babu";
        let title ='super star';
        const networth='120 cr'

        typeof(): used to define datatype.

   
   2. boolean: true/false

   3. number:- integers, float, decimal,exponential etc..
   -  -2^53-1 to +2^53-1
   ex: let num =10;
   let num=10.5364;

   4. undefined: variiable is declared but not initialized with a values
   ex: let a;


   null is absent 
       




   comment in js:-
   1. single line comment(//)
   2. multi - (/**/)








datatypes:-
1.primitive
2.non-primitive

operators:-
***********
- operators are special symbols whic used to perform operation on operands.
ex :-  2(operand1) + 2(operand2)

1.unary
2.binary
3.ternary (operand1 ? operand2 :operand3)

1.1 arithmatic 
1.2 assignment 
1.3 relational
1.4 logical 

1.1 arithmatic:- which performs operations such as,
        1.additional (concatenation :- joining of two or more string)
        2.substraction
        3.multiplication
        4.division
        5.modulus
        6.exponential
        7.increment(++)
                - pre-increment(++variable)
                - post-increment(variable++)
        8.decrement(--)

2.assignment operator:-
ex:- =
let a = 10;
additional assignment(+=)
substraction assignment(-=)
multiplication assignment(*=)
division assignment(/=)
mofulus assignment(%=)
exponential assignment(**=)

3.relational operator:-
- == , === , != , !== , > , >= , < , <=

- return type of relational operaots boolean values.

== - only checks value not a datatypes
=== - checks both data type and values.
!= - 

4.logical operators
&& , || , !
&& - both LHS & RHS true 
|| - anyone should be true
! - if true , it wil make false and vice-verse.

decision making statements:-
****************************
if 
if-else
else-if ladder
switch 
ternary condition

if:- 
- when only ione condition is there then we can use if.
- if block will work only for true statement.
if()
{
    
}

if-else:-
- if is a true statement
- else is a flase statment

looping statments:-
- iterating the block of code multiple times.
- for loop:-
-minimum iteration count is "0".
    synatx: -  for(intitialization ; condition ; updation)
                    {//statements}
- while loop
-minimum iteration count is "0".
syntax:- while(condition){//statment}
- do-while loop
-minimum iteration count is "1".
-sytax :- do{//statments}
            while(condition)

which loops are entry controlled loops and exit controled loops?
entry controlled loops - for loop , while loop
exit controled loop - do-while loop

functions:-
************
- functions is a building block of javascript.
- function is a block of code which is used to execute specific task.
- function is a non-primitive data type.
- functins can be reusable.

synatx :-  function function_name(optional parameters,a ){ // function delclaration
                                //statements
                                }
                        function_name(arguments);

types of function:-
*******************
1.named function:- function is having a name and invoked(calling) with the same name.
2.anonymus function:- a function which doesnot have a name for it .
                    - it cannot be executed by itself.
3.function expression:- an anonymus function body is assigned as a value to the variable
                        and same function will be invoked with the same vairable.
4.IIFE(immidiate invoke function expression):- 
- once function created immediatley it will called and executed.
- it can be invoked only ont time.
5.Arrow function :- it is introduced in es6 feature.
- it concise the normal function syntax.
- ()=>{};
- arrow function is similar to anonymus function.

6.Higher order function :- 
-higher order function is a function which accepts another function as an arguments/values.

7.callback function:-
- callback function is a function which is passed as a argument to another function.



Note:- current version of javascript is es14.
es - ECMA script .
ECMA - european computer manufacturing association.
- es6 feature is stable.

explicit return :- explicitly we have to give a keyword called as "return".
explciit return is possible in both normal function as well as arrow function.
implicit return:- implicitly(by default) arrow function will take return.
note:- no printing statements will work after "return" statement.

closure:-closure is a memory created when functions are bundled together/
nested each other by giving accessibility to the innermost function to access
the variables of outermost function.



Arrays :-
- it is a non-primitive data type.
- Array is used to store multiple values within a single variable.

syantx :-  [];

what is the difference between map and forEach method.
map() :- it is used to iterate the values.
        - it returns new copied array from the original array.

forEach() :- it is used to iterate the values.
          - it returns "undefined".

create array of objects
*************************



what is object?
- Object is an entity which contains states and behaviors.
-states - properties , behaviour - functionality.
- Object is an entity to store the values in the form key and value pair.

synatax :-   let obj = {};
ex :-   let userdetails ={
        name:"Sam",
        age:23
        }

Note: - Javascript is mainly object -based language till 2015 (es6) 
- after es6 feature they added oops concept.

JSON :- 
*******
- JSON stands for Javascript object notation.
- JSON is a javscript technique used to transfer the data from client to server and server to client.

syntax :-  

js object :-
************
let a = {
        name :"value",
        age:25
}

json object:-
*************
{
        "name" :"Sam",
        "age" :25
}

- to create json file we have to create  a file with extension called
        "filename.json".

json methods:-
**************
1.JSON.stringify() :-it is used to convert JS obejct into json object.
2.JSON.parse() :- it is used to convert json object into javascript object.

Asynchronous in javascript:-
****************************
- to perform multiple task at a time.

1.setTimeout() :- it is web api used to perform asyn operations with certain timeouts.
syntax :-   setTimeout(callbackfn , timeout);

2.setInterval() :- it is a web api used to perform async operation at every time interval specified.
synatx :-  setInterval(callbackfn , timeout);

3.promise :- Promise is an object which represents eventual completion or failures of async operations.
        states of promise:-
        1.pending state
        2.fulfilled state
        3.rejected state

syntax :-    let x = new Promise((resolve , reject)=>{});

        to execute the promise we have instance methods:-
                1.then() :- it is used to execute success or fulfilled state results.
                2.catch() :- it is used to execute rejected state results.
                3.finally() :- once promise is settled it will print for both success/failures

4.async & await :-
async :- async keyword converts synchronus function into asynchronous function and starts the promise.

await :- await keyword make the function to wait until promise completes.

note:- await keyword always used along with async keyword.

note:- javscript is by default "Synchronous(single threaded)".

Create - POST
Read - GET
update - PUT
Delete - Delete


DOM :-
******
- DOM stands document object model.
- DOM is a web api used to manipulate the html content.
- DOM is used to add , remove ,update the content in the html document.

DOM Methods:-
*************
1.document.getElementById("demo"):- it is used to select html element based on "id attribute" value.
                              - with id attribute we can select only one element(unique element).

2.document.getElementsByClassName("test"):-it is used to select html element based on "class attribute" value.
                                      - with class attribute we can select multiple elements.

3.document.getElementsByTagName(""):- it is used to select html elements based on their tag names.

4.document.getelementsByName(""):- it is used to select the html elements based on "name attribute".


- below methods used to select html elements based on "css selectors".
5.document.querySelector("#id"):- this method is used to select only one element.
6.document.querySelectorAll(".class"):- this method is used to select multiple elements.


Events in DOM:-
***************
-events are nothing but an actions performed on the html element.
-in dom , we have events like click events , mouse events and key events.

click evenets :- onclick , ondblclick , onsubmit , onchange .

mouse events :- mouseover , mouseleave

key events :- keydown , keyup , keypress(deprocated).

Dynamic creation of html element in js:-
****************************************
- to create html element in javascript , we use a method called as "document.createElement()".

- by defualt elements created in js will not added to the document, so we have to add them explicitly by using a method called as "appendChild()"

- to set the attributes we can use a method called as "setAttribute()".

- to remove attribute we have  method "removeAttribute()"



Q.) Take array of objects where each object contains emp_id, emp_name, emp_company, emp_salary, and emp_address
wher emp_address further contains an object which includes two properties such as emp-city,area.
Display all this employee datas on the UI through javascript. 



Q.) Create a signup form that contains
username(!empty),
email(@,!empty),
password(should be 6)and 
confirm password(same,!empty),
once you click on submit button , a alert should be 
popped up on your screen "form is submitted successfully"
if and only if all the details are correct.








